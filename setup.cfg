[metadata]
name = pypeit
description = PypeIt Spectroscopic Reduction
long_description = file: README.rst
long_description_content_type = text/x-rst
author = PypeIt Collaboration
author_email = pypeit@ucolick.org
license = BSD-3
url = https://github.com/pypeit/PypeIt
edit_on_github = False
github_project = pypeit/PypeIt
keywords = pypeit, PypeIt, astronomy, Keck, UCO, Lick, spectroscopy, data reduction
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Documentation :: Sphinx
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Software Development :: User Interfaces

[options]
zip_safe = False
use_2to3=False
packages = find:
python_requires = >=3.9,<3.12
setup_requires = setuptools_scm
include_package_data = True
install_requires =
    numpy>=1.22
    astropy>=4.3
    extension-helpers>=0.1
    packaging>=0.19
    scipy>=1.7
    matplotlib>=3.7
    PyYAML>=5.1
    PyERFA>=2.0.0
    fast-histogram>=0.11
    configobj>=5.0.6
    scikit-learn>=1.0
    IPython>=7.10.0
    ginga>=4.1.1
    linetools
    qtpy>=2.0.1
    pygithub
    bottleneck
    pyqt6
scripts =
    bin/pypeit_c_enabled
    bin/pypeit_chk_plugins
    bin/pypeit_clean
    bin/pypeit_version
    bin/pypeit_cp_spec1d

[options.extras_require]
scikit-image =
    scikit-image
specutils =
    specutils
test =
    pytest>=6.0.0
    pytest-astropy
    tox
    pytest-cov
    coverage
docs =
    sphinx<7,>=1.6
    docutils<0.19
    sphinx-automodapi
    sphinx_rtd_theme==1.2.2
dev =
    scikit-image
    specutils
    pytest>=6.0.0
    pytest-astropy
    tox
    pytest-cov
    coverage
    sphinx<7,>=1.6
    docutils<0.19
    sphinx-automodapi
    sphinx_rtd_theme==1.2.2

[options.package_data]
* = *.rst, *.txt, data/*, data/*/*, data/*/*/*, data/*/*/*/*, data/*/*/*/*/*, data/*/*/*/*/*/*

[options.entry_points]
console_scripts =

    # non-GUI scripts
    pypeit_arxiv_solution = pypeit.scripts.arxiv_solution:ArxivSolution.entry_point
    pypeit_cache_github_data = pypeit.scripts.cache_github_data:CacheGithubData.entry_point
    pypeit_chk_for_calibs = pypeit.scripts.chk_for_calibs:ChkForCalibs.entry_point
    pypeit_chk_noise_1dspec = pypeit.scripts.chk_noise_1dspec:ChkNoise1D.entry_point
    pypeit_chk_noise_2dspec = pypeit.scripts.chk_noise_2dspec:ChkNoise2D.entry_point
    pypeit_coadd_1dspec = pypeit.scripts.coadd_1dspec:CoAdd1DSpec.entry_point
    pypeit_coadd_2dspec = pypeit.scripts.coadd_2dspec:CoAdd2DSpec.entry_point
    pypeit_coadd_datacube = pypeit.scripts.coadd_datacube:CoAddDataCube.entry_point
    pypeit_collate_1d = pypeit.scripts.collate_1d:Collate1D.entry_point
    pypeit_flux_calib = pypeit.scripts.flux_calib:FluxCalib.entry_point
    pypeit_flux_setup = pypeit.scripts.flux_setup:FluxSetup.entry_point
    pypeit_install_extinctfile = pypeit.scripts.install_extinctfile:InstallExtinctfile.entry_point
    pypeit_install_linelist = pypeit.scripts.install_linelist:InstallLinelist.entry_point
    pypeit_install_ql_calibs = pypeit.scripts.install_ql_calib:InstallQLCalibs.entry_point
    pypeit_install_telluric = pypeit.scripts.install_telluric:InstallTelluric.entry_point
    #pypeit_lowrdx_pixflat = pypeit.scripts.lowrdx_pixflat:entry_point
    pypeit_lowrdx_skyspec = pypeit.scripts.lowrdx_skyspec:LowRDXSkySpec.entry_point
    pypeit_multislit_flexure = pypeit.scripts.multislit_flexure:MultiSlitFlexure.entry_point
    pypeit_obslog = pypeit.scripts.obslog:ObsLog.entry_point
    #pypeit_parse_calib_id = pypeit.scripts.parse_calib_id:ParseCalibID.entry_point
    pypeit_parse_slits = pypeit.scripts.parse_slits:ParseSlits.entry_point
    pypeit_qa_html = pypeit.scripts.qa_html:QAHtml.entry_point
    pypeit_ql = pypeit.scripts.ql:QL.entry_point
    #pypeit_ql_jfh_multislit = pypeit.scripts.ql_multislit:QL_Multislit.entry_point
    run_pypeit = pypeit.scripts.run_pypeit:RunPypeIt.entry_point
    pypeit_sensfunc = pypeit.scripts.sensfunc:SensFunc.entry_point
    pypeit_setup = pypeit.scripts.setup:Setup.entry_point
    pypeit_setup_coadd2d = pypeit.scripts.setup_coadd2d:SetupCoAdd2D.entry_point
    # pypeit_show_arxiv opens a matplotlib window, but not ginga
    pypeit_show_arxiv = pypeit.scripts.show_arxiv:ShowArxiv.entry_point
    # pypeit_show_wvcalib uses linetools to open a json file, but uses
    # matplotlib to show the spectrum...
    pypeit_show_wvcalib = pypeit.scripts.show_wvcalib:ShowWvCalib.entry_point
    pypeit_tellfit = pypeit.scripts.tellfit:TellFit.entry_point
    pypeit_trace_edges = pypeit.scripts.trace_edges:TraceEdges.entry_point

    # GUI scripts
    # Ideally want to be able to do something like this for the following scripts:
    #
    #   pypeit_arcid_plot = pypeit.scripts.arcid_plot:entry_point [gui]
    #
    # so that they only get installed when optional gui dependencies are installed.
    # However, gui dependencies like ginga and linetools are currently deeply embedded
    # and not cleanly separable.
    # pypeit_arcid_plot = pypeit.scripts.arcid_plot:entry_point
    pypeit_chk_alignments = pypeit.scripts.chk_alignments:ChkAlignments.entry_point
    pypeit_chk_edges = pypeit.scripts.chk_edges:ChkEdges.entry_point
    pypeit_chk_flats = pypeit.scripts.chk_flats:ChkFlats.entry_point
    pypeit_chk_tilts = pypeit.scripts.chk_tilts:ChkTilts.entry_point
    pypeit_chk_wavecalib = pypeit.scripts.chk_wavecalib:ChkWaveCalib.entry_point
    pypeit_compare_sky = pypeit.scripts.compare_sky:CompareSky.entry_point
    pypeit_identify = pypeit.scripts.identify:Identify.entry_point
    pypeit_ql_multislit = pypeit.scripts.ql_multislit:QL_MOS.entry_point
    pypeit_show_1dspec = pypeit.scripts.show_1dspec:Show1DSpec.entry_point
    pypeit_show_2dspec = pypeit.scripts.show_2dspec:Show2DSpec.entry_point
    pypeit_skysub_regions = pypeit.scripts.skysub_regions:SkySubRegions.entry_point
    pypeit_view_fits = pypeit.scripts.view_fits:ViewFits.entry_point

ginga.rv.plugins =
    SlitWavelength = pypeit.display:setup_SlitWavelength

[tool:pytest]
testpaths = "pypeit/tests"

[coverage:run]
omit =
    pypeit/_astropy_init*
    pypeit/conftest.py
    pypeit/*setup_package*
    pypeit/tests/*
    pypeit/*/tests/*
    pypeit/extern/*
    pypeit/version*
    */pypeit/_astropy_init*
    */pypeit/conftest.py
    */pypeit/*setup_package*
    */pypeit/tests/*
    */pypeit/*/tests/*
    */pypeit/extern/*
    */pypeit/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_


