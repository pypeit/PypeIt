
**Version**: 1.1.10

=======================  ===================================================================================================  =====================  ====================================================================================================================================================================================
Attribute                Type                                                                                                 Array Type             Description                                                                                                                                                                         
=======================  ===================================================================================================  =====================  ====================================================================================================================================================================================
``BOX_CHI2``             `numpy.ndarray`_                                                                                     float                  Reduced chi2 of the model fit for this spectral pixel                                                                                                                               
``BOX_COUNTS``           `numpy.ndarray`_                                                                                     float                  Boxcar flux (counts)                                                                                                                                                                
``BOX_COUNTS_IVAR``      `numpy.ndarray`_                                                                                     float                  Inverse variance of optimally extracted flux using modelivar image (counts^2)                                                                                                       
``BOX_COUNTS_NIVAR``     `numpy.ndarray`_                                                                                     float                  Boxcar extracted noise variance, sky+read noise only (counts^2)                                                                                                                     
``BOX_COUNTS_SIG``       `numpy.ndarray`_                                                                                     float                  Boxcar extracted noise from IVAR (counts)                                                                                                                                           
``BOX_COUNTS_SIG_DET``   `numpy.ndarray`_                                                                                     float                  Boxcar extracted detector noise (counts)                                                                                                                                            
``BOX_COUNTS_SKY``       `numpy.ndarray`_                                                                                     float                  Boxcar extracted sky (counts)                                                                                                                                                       
``BOX_FLAM``             `numpy.ndarray`_                                                                                     float                  Boxcar flux (erg/s/cm^2/Ang)                                                                                                                                                        
``BOX_FLAM_IVAR``        `numpy.ndarray`_                                                                                     float                  Boxcar flux inverse variance (1e-17 erg/s/cm^2/Ang)^-2                                                                                                                              
``BOX_FLAM_SIG``         `numpy.ndarray`_                                                                                     float                  Boxcar flux uncertainty (1e-17 erg/s/cm^2/Ang)                                                                                                                                      
``BOX_FRAC_USE``         `numpy.ndarray`_                                                                                     float                  Fraction of pixels in the object profile subimage used for this extraction                                                                                                          
``BOX_FWHM``             `numpy.ndarray`_                                                                                     float                  Spectral FWHM (in Angstroms) at every pixel of the boxcar extracted flux.                                                                                                           
``BOX_MASK``             `numpy.ndarray`_                                                                                     `numpy.bool`_          Mask for boxcar extracted flux. True=good                                                                                                                                           
``BOX_NPIX``             `numpy.ndarray`_                                                                                     float                  Number of pixels used for the boxcar extraction; can be fractional                                                                                                                  
``BOX_RADIUS``           float                                                                                                                       Size of boxcar radius (pixels)                                                                                                                                                      
``BOX_WAVE``             `numpy.ndarray`_                                                                                     float                  Boxcar Wavelengths in vacuum (Angstroms)                                                                                                                                            
``DEC``                  float                                                                                                                       Declination (J2000) decimal degree                                                                                                                                                  
``DET``                  str                                                                                                                         A string identifier for the reduced detector or mosaic.                                                                                                                             
``DETECTOR``             :class:`~pypeit.images.detector_container.DetectorContainer`, :class:`~pypeit.images.mosaic.Mosaic`                         Object with the detector or mosaic metadata                                                                                                                                         
``ECH_FRACPOS``          float, `numpy.floating`_                                                                                                    Synced echelle fractional location of the object on the slit                                                                                                                        
``ECH_NAME``             str                                                                                                                         Name of the object for echelle data. Same as NAME above but order numbers are omitted giving a unique name per object.                                                              
``ECH_OBJID``            int, `numpy.integer`_                                                                                                       Object ID for echelle data. Each object is given an index in the order it appears increasing from from left to right. These are one based.                                          
``ECH_ORDER``            int, `numpy.integer`_                                                                                                       Physical echelle order                                                                                                                                                              
``ECH_ORDERINDX``        int, `numpy.integer`_                                                                                                       Order indx, analogous to SLITID for echelle. Zero based.                                                                                                                            
``FLEX_SHIFT_GLOBAL``    float                                                                                                                       Global shift of the spectrum to correct for spectralflexure (pixels). This is based on the sky spectrum atthe center of the slit                                                    
``FLEX_SHIFT_LOCAL``     float                                                                                                                       Local shift of the spectrum to correct for spectralflexure (pixels). This should be a small correction tothe global value, and is based on the sky spectrumextracted near the object
``FLEX_SHIFT_TOTAL``     float                                                                                                                       Total shift of the spectrum to correct for spectralflexure (pixels). This is the sum of the global andlocal FLEX_SHIFT                                                              
``FWHM``                 float                                                                                                                       Spatial FWHM of the object (pixels)                                                                                                                                                 
``FWHMFIT``              `numpy.ndarray`_                                                                                     float                  Spatial FWHM across the detector (pixels)                                                                                                                                           
``MASKDEF_EXTRACT``      bool                                                                                                                        Boolean indicating if this is a forced extraction at the expected location from slitmask design.                                                                                    
``MASKDEF_ID``           int, `numpy.integer`_                                                                                                       Slitmask definition ID                                                                                                                                                              
``MASKDEF_OBJMAG``       float                                                                                                                       Magnitude of the object from the slitmask definition                                                                                                                                
``MASKDEF_OBJMAG_BAND``  str                                                                                                                         Magnitude band of the object from the slitmask definition                                                                                                                           
``MASKDEF_OBJNAME``      str                                                                                                                         Name of the object from the slitmask definition                                                                                                                                     
``NAME``                 str                                                                                                                         Name of the object following the naming model                                                                                                                                       
``OBJID``                int, `numpy.integer`_                                                                                                       Object ID for multislit data. Each object is given an index for the slit it appears increasing from from left to right. These are one based.                                        
``OBJTYPE``              str                                                                                                                         Object type (e.g., standard, science)                                                                                                                                               
``OPT_CHI2``             `numpy.ndarray`_                                                                                     float                  Reduced chi2 of the model fit for this spectral pixel                                                                                                                               
``OPT_COUNTS``           `numpy.ndarray`_                                                                                     float                  Optimal flux (counts)                                                                                                                                                               
``OPT_COUNTS_IVAR``      `numpy.ndarray`_                                                                                     float                  Inverse variance of optimally extracted flux using modelivar image (counts^2)                                                                                                       
``OPT_COUNTS_NIVAR``     `numpy.ndarray`_                                                                                     float                  Optimally extracted noise variance, sky+read noise only (counts^2)                                                                                                                  
``OPT_COUNTS_SIG``       `numpy.ndarray`_                                                                                     float                  Optimally extracted noise from IVAR (counts)                                                                                                                                        
``OPT_COUNTS_SIG_DET``   `numpy.ndarray`_                                                                                     float                  Optimally extracted detector noise (counts)                                                                                                                                         
``OPT_COUNTS_SKY``       `numpy.ndarray`_                                                                                     float                  Optimally extracted sky (counts)                                                                                                                                                    
``OPT_FLAM``             `numpy.ndarray`_                                                                                     float                  Optimal flux (1e-17 erg/s/cm^2/Ang)                                                                                                                                                 
``OPT_FLAM_IVAR``        `numpy.ndarray`_                                                                                     float                  Optimal flux inverse variance (1e-17 erg/s/cm^2/Ang)^-2                                                                                                                             
``OPT_FLAM_SIG``         `numpy.ndarray`_                                                                                     float                  Optimal flux uncertainty (1e-17 erg/s/cm^2/Ang)                                                                                                                                     
``OPT_FRAC_USE``         `numpy.ndarray`_                                                                                     float                  Fraction of pixels in the object profile subimage used for this extraction                                                                                                          
``OPT_FWHM``             `numpy.ndarray`_                                                                                     float                  Spectral FWHM (in Angstroms) at every pixel of the optimally extracted flux.                                                                                                        
``OPT_MASK``             `numpy.ndarray`_                                                                                     `numpy.bool`_          Mask for optimally extracted flux. True=good                                                                                                                                        
``OPT_WAVE``             `numpy.ndarray`_                                                                                     float                  Optimal Wavelengths in vacuum (Angstroms)                                                                                                                                           
``PYPELINE``             str                                                                                                                         Name of the PypeIt pipeline mode                                                                                                                                                    
``RA``                   float                                                                                                                       Right Ascension (J2000) decimal degree                                                                                                                                              
``S2N``                  float                                                                                                                       Median signal to noise ratio of the extracted spectrum(OPT if available, otherwise BOX)                                                                                             
``SLITID``               int, `numpy.integer`_                                                                                                       PypeIt slit ID (aka SPAT_ID).                                                                                                                                                       
``SPAT_FRACPOS``         float, `numpy.floating`_                                                                                                    Fractional location of the object on the slit                                                                                                                                       
``SPAT_FWHM``            float                                                                                                                       Spatial FWHM of the object (arcsec)                                                                                                                                                 
``SPAT_PIXPOS``          float, `numpy.floating`_                                                                                                    Spatial location of the trace on detector (pixel) at half-way                                                                                                                       
``TRACE_SPAT``           `numpy.ndarray`_                                                                                     float                  Object trace along the spec (spatial pixel)                                                                                                                                         
``VEL_CORR``             float                                                                                                                       Relativistic velocity correction for wavelengths                                                                                                                                    
``VEL_TYPE``             str                                                                                                                         Type of heliocentric correction (if any)                                                                                                                                            
``WAVE_RMS``             float, `numpy.floating`_                                                                                                    RMS (pix) for the wavelength solution for this slit.                                                                                                                                
``hand_extract_flag``    bool                                                                                                                        Boolean indicating if this is a forced extraction at the location provided by the user.                                                                                             
``maskwidth``            float, `numpy.floating`_                                                                                                    Size (in units of spatial fwhm) of the region used for local sky subtraction                                                                                                        
``smash_peakflux``       float                                                                                                                       Peak value of the spectral direction collapsed spatial profile                                                                                                                      
``smash_snr``            float                                                                                                                       Peak S/N ratio of the spectral direction collapsed patial profile                                                                                                                   
``trace_spec``           `numpy.ndarray`_                                                                                     int, `numpy.integer`_  Array of pixels along the spectral direction                                                                                                                                        
=======================  ===================================================================================================  =====================  ====================================================================================================================================================================================
