
**Version**: 1.1.2

======================  ===================================================================================================  =================  =================================================================================================================================================================================================================================
Attribute               Type                                                                                                 Array Type         Description                                                                                                                                                                                                                      
======================  ===================================================================================================  =================  =================================================================================================================================================================================================================================
``bkg_redux_skymodel``  `numpy.ndarray`_                                                                                     `numpy.floating`_  2D sky model image without the background subtraction (float32)                                                                                                                                                                  
``bpmmask``             :class:`~pypeit.images.imagebitmask.ImageBitMaskArray`                                                                  2D bad-pixel mask for the image                                                                                                                                                                                                  
``det``                 int                                                                                                                     Detector index                                                                                                                                                                                                                   
``detector``            :class:`~pypeit.images.detector_container.DetectorContainer`, :class:`~pypeit.images.mosaic.Mosaic`                     Detector or Mosaic metadata                                                                                                                                                                                                      
``ivarmodel``           `numpy.ndarray`_                                                                                     `numpy.floating`_  2D ivar model image (float32)                                                                                                                                                                                                    
``ivarraw``             `numpy.ndarray`_                                                                                     `numpy.floating`_  2D processed inverse variance image (float32)                                                                                                                                                                                    
``maskdef_designtab``   `astropy.table.table.Table`_                                                                                            Table with slitmask design and object info                                                                                                                                                                                       
``med_chis``            `numpy.ndarray`_                                                                                     `numpy.floating`_  Median of the chi image for each slit/order                                                                                                                                                                                      
``objmodel``            `numpy.ndarray`_                                                                                     `numpy.floating`_  2D object model image (float32)                                                                                                                                                                                                  
``scaleimg``            `numpy.ndarray`_                                                                                     `numpy.floating`_  2D multiplicative scale image [or a single scalar as an array] that has been applied to the science image (float32)                                                                                                              
``sci_spat_flexure``    `numpy.ndarray`_                                                                                     `numpy.floating`_  Shift, in spatial pixels, between this image and SlitTrace. Shape is (nslits, 2), where spat_flexure[i,0] is the spatial shift of the left edge of slit i and spat_flexure[i,1] is the spatial shift of the right edge of slit i.
``sci_spec_flexure``    `astropy.table.table.Table`_                                                                                            Global shift of the spectrum to correct for spectral flexure (pixels). This is based on the sky spectrum at the center of each slit                                                                                              
``sciimg``              `numpy.ndarray`_                                                                                     `numpy.floating`_  2D processed science image (float32)                                                                                                                                                                                             
``skymodel``            `numpy.ndarray`_                                                                                     `numpy.floating`_  2D sky model image (float32)                                                                                                                                                                                                     
``slits``               :class:`~pypeit.slittrace.SlitTraceSet`                                                                                 SlitTraceSet defining the slits                                                                                                                                                                                                  
``std_chis``            `numpy.ndarray`_                                                                                     `numpy.floating`_  std of the chi image for each slit/order                                                                                                                                                                                         
``tilts``               `numpy.ndarray`_                                                                                     `numpy.floating`_  2D tilts image (float64)                                                                                                                                                                                                         
``vel_corr``            float                                                                                                                   Relativistic velocity correction for wavelengths                                                                                                                                                                                 
``vel_type``            str                                                                                                                     Type of reference frame correction (if any). Options are listed in the routine: WavelengthSolutionPar.valid_reference_frames() Current list: observed, heliocentric, barycentric                                                 
``waveimg``             `numpy.ndarray`_                                                                                     `numpy.floating`_  2D wavelength image in vacuum (float64)                                                                                                                                                                                          
``wavesol``             `astropy.table.table.Table`_                                                                                            Table with WaveCalib diagnostic info                                                                                                                                                                                             
======================  ===================================================================================================  =================  =================================================================================================================================================================================================================================
