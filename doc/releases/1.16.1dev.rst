
Version 1.16.1dev
=================

Installation Changes
--------------------

- Significant expansion of PypeIt's use of the cache system; see
  :ref:`data_installation`.  Important changes include that most cached files
  are now version dependent.  When upgrading to new versions of PypeIt, users
  should delete their cache and start fresh.

Dependency Changes
------------------

- Support added for numpy>=2.0.0; numpy<=2.0.0 should still be supported

Functionality/Performance Improvements and Additions
----------------------------------------------------

- Added the possibility to decide if the extracted standard star spectrum should be
  used as a crutch for tracing the object in the science frame (before it was done as default).
  This is done by setting the parameter ``use_std_trace`` in FindObjPar.
- Now PypeIt can handle the case where "Standard star trace does not match the number of orders in the echelle data"
  both in `run_pypeit` and in `pypeit_coadd_1dspec`.

Instrument-specific Updates
---------------------------

- GMOS-South: PypeIt reductions of GMOS-South MOS observations now properly
  account for tilted slits in the mask design file. Previously, these data
  could only be reduced without including any information from the slitmask
  design.

Script Changes
--------------

- Modifications to the cache-related :ref:`install_scripts` to accommodate
  expansion of and changes to the cache system.
- Added ``pypeit_clean_cache`` script to facilitate both viewing and removing
  files in the cache.
- Changed the name of the multi-dimensional specdata to specdata_multi in pypeit_identify
  and improved the robustness of the saving dialog when calibrating single trace spectra.
- Fixed a read-in error for the high resolution A0V PHOENIX model.
- A new script, called `pypeit_extract_datacube`, allows 1D spectra of point
  sources to be extracted from datacubes.
- The sensitivity function is now generated outside of datacube generation.
- The `grating_corr` column is now used to select the correct grating
  correction file for each spec2d file when generating the datacube.
- Added the ``--extr`` parameter in the ``pypeit_sensfunc`` script (also as a SensFuncPar)
  to allow the user to specify the extraction method to use when computing the sensitivity
  function (before only optimal extraction was used).

Datamodel Changes
-----------------

Under-the-hood Improvements
---------------------------

- Introduced :class:`~pypeit.pypeitdata.PypeItDataPaths` to handle all
  interactions with the ``pypeit/data`` directory, which provides a unified
  interface for accessing on-disk and cached files.

Bug Fixes
---------

- Fix "The system cannot find the file specified" errors when installing on Windows.
- Fixed a fault caused when all frames in a pypeit file are identified as being
  part of ``all`` calibration groups.
- Allow for empty 2D wavecal solution in HDU extension of WaveCalib file
- Fixed a bug in the ginga display function, when the user doesn't provide the `trc_name` argument.
- Fix a MAJOR BUT SUBTLE bug in the use of ``numpy.argsort``. When using ``numpy.argsort``
  the parameter kind='stable' should be used to ensure that a sorting algorithm more robust
  than "quicksort" is used.
- Fix error "ValueError: setting an array element with a sequence. The requested
  array has an inhomogeneous shape after 1 dimensions..." occurring when unpacking
  the SpecObj spectrum but having an attribute of the SpecObj object that is None.




